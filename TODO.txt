Faire le projet:
V-créer la forme 
V-créer le maillage progressif et fin aux endroits les plus contraints
-créer la force hydrostatique (->discrete ?)
-faire un solveur efficace (solveur)
-calculer les efforts internes
-calculer les deplacements 
-enlever de la matiere en itérant
-faire un rapport de 2 pages
-préparer la présentation orale

-PLANAR_STRAIN

-Dans le rapport, 
garder l'explication des différents barrages en faisant nos propres figures !!
-On bloque les déplacements dans la direction z donc on est en déformation plane ! ->> On suppose que la terre sur laquelle le barrage se repose l'empêche de se déformer, une  tension y est donc appliquée.
-écrire les conditions frontière directement sur la figure avec le maillage
-


QUESTIONS ASSISTANT:

-comment implémenter la pression hydrostatique ? -> project dependance en y, fem.c project a modifier, et dans post
-est ce que je dois diviser le coté gauche en une multitude de sous domaines ?
-comment mettre les conditions frontieres sur la figure maillage ?
-c'est quoi UV ?, d'où il sort ?
-qu'est ce que on doit modifier concretement dans project ? 
-Comment peut on itérer pour supprimer de la matiere -> lier les post,pre,project pour enlever de la matiere 
aux bons endroits
-neumann_x ou neumann_n sur les cotés pas droits => on mets rien dans le code quand homogène(=zéro) mais on mets dans le rapport (il parle de sigma)
-refaire rapport ?
-c'est quoi nx et ny, c'est quoi tn ?
-quand tout est ouvert comment on sait lequel est run ?


solveur band renumérotation => reverse cuthill mckee algo   rapide

axisymétrique: modifier assemble, assemble neumann, avec un falg if axisymetrique , change pas le solveur, (opérateur laplacien)
-

############################ Mise au propre réunion Michel 9/4 #########################################"


pour la pression hydrostatique, il faut:
-Dans pre: modifier le fem.c (3 endroits) et le fem.h (1) et imposer la conditions dans main.c avec comme value1 = -rho*g
-Dans project: modifier le fem.c et fem.h et dans le code assembleNeumann, ajouter la pression hydrostatique dans les type et dans les if, pour faire en sorte que f_x = value*y
-Dans pro: ptt l'ajouter aussi 

UV ce sont les positions, matrice des positions

PAS itérer pour enlever de la matière pour l'instant, sinon il faut modifier l'intérieur du code pour lier pre/project/post

On est pas obligé d'imposer les conditions de Neumann = 0 car s'il n'y a pas de condition c'est ce que le code fera. Mais il faut en parler dans le projet donc c'est mieux d'etre explicite

Le meilleur solveur 2D à utiliser pour renuméroter le solveur band est le Reverse Cuthill Mckee Algorithm -> rapide 

pour l'axisymétrie, il faut mettre une condition if (type) = axisymétric alors on rendre dans une partie avec du r, il faut fair eça dans assemble et neumannAssemble






